package tester;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.List;

import viper.comms.util.Vutil;

public class SerianNoUB {
	static List<byte[]> sequenceList = new ArrayList<byte[]>();
    final static int LEN_SERIAL=48;

	/**
	 * @param args
	 */

	public static byte[] kocokAwal() {
		int kocokanAwal = (int) Math
				.round((Math.abs(Math.random()) * 1000000000) % 354);
		SecureRandom random = new SecureRandom();
		for (int i = 0; i < kocokanAwal; i++) {

			byte seed[] = random.generateSeed(kocokanAwal);
			random = new SecureRandom(seed);

		}
		byte bytes[] = new byte[LEN_SERIAL];
		random.nextBytes(bytes);

		return bytes;
	}

	public static void main(String[] args) {
//		// String result=enc("alojhgkjhgkjhgkjhgkjhgkjhoooha");
//		// System.out.println( result.length());
//		for (int a = 0; a < 99; a++) {
//
//			byte sequence[] = new byte[LEN_SERIAL];
//			for (int i = 0; i < LEN_SERIAL; i++) {
//				sequence[i] = (byte) (i + 1);
//			}
//
//			byte jarak[] = kocok();
//			for (int i = 0; i < LEN_SERIAL; i++) {
//				int target = Math.abs(jarak[i]) % LEN_SERIAL;
//				byte temp = sequence[target];
//				sequence[target] = sequence[i];
//				sequence[i] = temp;
//			}
//
//			System.out.print("theSeq=new byte[]{");
//			int mycount = 0;
//			for (byte b : sequence) {
//				System.out.print(b);
//				if (mycount != (LEN_SERIAL-1)) {
//					System.out.print(",");
//				}
//
//				mycount++;
//			}
//
//			System.out.println("};sequenceList.add(theSeq);");
//			System.out.println();
//		}

		createList();
//		String result = enc("89000");
//		System.out.println(result);
//		char[] sumber = new char[result.length()];
//		for (int i = 0; i < result.length(); i++) {
//			sumber[i] = result.charAt(i);
//		}
//		char[] tujuan = DoShuffle(sumber, result.hashCode());
//
//		String baca = "";
//		for (char c : tujuan) {
//			baca += c;
//		}
//		System.out.println(baca);
//		
//		char[] kembali = UndoShuffle(tujuan, result.hashCode());
//		baca="";
//		
//		for (char c : kembali) {
//			baca += c;
//		}
//		System.out.println(baca);
//		
//	String hasil=	Scan("8cfa003f5dae2fb1403062f8ff9f08fdfa12500bef50f785");
//	System.out.println(hasil);
		for (int i = 1; i <= 300; i++) {
		System.out.println("No Seri " + FillZero(5, i)+" / "+Enkrip(String.valueOf(i)));
			
		}
	}
	
	public static String  FillZero(int maxCount, int bilanngan){
		String temp="";
		int nolYangPerluDitambah= 5-String.valueOf(bilanngan).length();
		for (int i = 0; i < nolYangPerluDitambah; i++) {
			temp+="0";
		}
		return temp + String.valueOf(bilanngan);
	}
	
	public static String Enkrip(String pesanAsli){
		String result = enc(pesanAsli);
		//System.out.println(result);
		char[] sumber = new char[result.length()];
		for (int i = 0; i < result.length(); i++) {
			sumber[i] = result.charAt(i);
		}
		char[] tujuan = DoShuffle(sumber, result.hashCode());

		String baca = "";
		for (char c : tujuan) {
			baca += c;
		}
		//System.out.println(baca);
		return baca;
	}
	
	public static String Scan(String encryptedMessage) {

		for (int i = 0; i <= 90000; i++) {
			if (encryptedMessage.equals(Enkrip(String.valueOf(i)))) {
				return String.valueOf(i);
			}
		}
		return null;
	}
	
	public static char[] DoShuffle(char[] sumber, long hashNum){
	
		int listKeYangDipakai = (int) (Math.abs(hashNum) % 99);
		byte[] listPengocok= sequenceList.get(listKeYangDipakai);
		char[] target = new char[sumber.length];
		for (int j = 0; j < target.length; j++) {
		target[j]=0;
		}
		
		for (int i = 0; i < sumber.length; i++) {
			char temp=sumber[listPengocok[i]-1];
			target[i]=temp;
			
		}
		
		return target;
		
	}

	public static char[] UndoShuffle(char[] sumber, long hashNum){
		
		int listKeYangDipakai = (int) (Math.abs(hashNum) % 99);
		byte[] listPengocok= sequenceList.get(listKeYangDipakai);
		char[] target = new char[sumber.length];
		for (int j = 0; j < target.length; j++) {
		target[j]=0;
		}
		
		for (int i = 0; i < sumber.length; i++) {
			char temp=sumber[i];
			target[listPengocok[i]-1]=temp;
			
		}
		
		return target;
		
	}
	public static void createList() {
		
		byte theSeq[];

		

	theSeq=new byte[]{21,47,22,45,19,24,3,29,30,10,38,27,17,13,36,7,42,1,16,26,23,18,5,37,31,6,14,40,35,20,11,41,15,46,4,8,28,2,25,34,43,33,44,48,39,9,32,12};sequenceList.add(theSeq);

	theSeq=new byte[]{6,10,16,1,2,18,19,15,28,26,30,45,22,7,32,44,40,13,36,37,33,20,38,46,27,42,8,43,9,5,21,31,24,3,25,35,29,34,14,41,17,12,4,11,48,39,47,23};sequenceList.add(theSeq);

	theSeq=new byte[]{6,3,21,26,22,30,4,47,12,19,9,20,1,14,16,40,31,42,46,10,23,17,13,32,2,27,11,37,8,29,24,41,18,48,34,5,39,35,15,28,45,44,33,36,38,7,43,25};sequenceList.add(theSeq);

	theSeq=new byte[]{44,46,13,31,17,29,2,30,35,12,25,48,8,5,39,18,47,20,21,27,7,23,14,1,33,10,41,3,45,40,15,16,6,22,24,26,36,11,43,28,32,42,9,4,34,38,37,19};sequenceList.add(theSeq);

	theSeq=new byte[]{3,31,2,28,46,1,18,24,45,29,42,48,26,20,30,35,47,8,38,7,9,43,21,36,22,4,34,16,40,32,33,10,13,6,15,5,14,12,39,37,27,17,19,41,11,23,25,44};sequenceList.add(theSeq);

	theSeq=new byte[]{17,42,43,19,11,39,33,1,36,27,14,6,21,47,16,4,18,34,32,35,22,5,44,20,8,48,7,29,38,2,46,45,41,26,37,12,30,15,13,25,31,9,10,28,24,23,3,40};sequenceList.add(theSeq);

	theSeq=new byte[]{30,28,17,40,3,15,29,41,9,23,20,35,31,24,36,10,6,32,12,21,13,5,33,1,16,47,27,8,18,45,39,34,14,42,38,2,11,48,26,25,7,37,19,22,43,4,44,46};sequenceList.add(theSeq);

	theSeq=new byte[]{35,4,10,6,1,9,45,16,8,34,13,20,42,25,5,27,37,32,24,30,48,33,43,36,18,17,38,12,40,14,39,15,21,23,44,46,3,11,28,19,47,26,7,41,22,31,2,29};sequenceList.add(theSeq);

	theSeq=new byte[]{31,9,13,41,3,7,6,12,37,30,15,14,38,23,42,18,16,4,25,44,39,43,46,26,22,33,19,48,36,34,45,28,10,8,17,47,32,11,21,5,2,40,35,29,24,27,20,1};sequenceList.add(theSeq);

	theSeq=new byte[]{11,43,2,16,32,1,47,3,24,48,40,45,20,41,4,37,6,30,10,31,21,12,17,14,23,9,13,28,8,36,29,33,46,44,5,18,39,22,7,42,34,19,26,35,25,38,27,15};sequenceList.add(theSeq);

	theSeq=new byte[]{36,30,24,9,13,31,42,40,21,3,20,41,12,10,35,48,5,46,33,16,17,44,19,39,25,22,18,27,28,15,37,11,34,6,29,14,47,4,7,38,23,1,45,43,2,32,26,8};sequenceList.add(theSeq);

	theSeq=new byte[]{15,12,30,48,17,20,31,8,47,10,36,25,3,42,26,22,23,41,33,32,44,29,2,11,6,40,37,46,9,4,34,13,39,24,1,5,16,28,14,38,27,7,43,21,19,45,35,18};sequenceList.add(theSeq);

	theSeq=new byte[]{44,23,5,48,30,35,15,34,12,28,45,2,47,31,8,9,46,36,37,3,38,33,27,1,40,41,25,7,10,19,18,42,4,39,29,32,6,26,17,13,16,11,20,21,22,14,43,24};sequenceList.add(theSeq);

	theSeq=new byte[]{3,12,42,11,30,13,22,34,18,39,14,32,40,7,44,24,17,20,29,37,28,8,38,10,16,41,6,2,33,31,9,27,36,1,19,5,45,48,35,15,46,4,47,26,21,43,23,25};sequenceList.add(theSeq);

	theSeq=new byte[]{11,22,8,13,42,16,10,18,25,34,5,14,6,4,38,19,37,46,36,41,39,30,43,24,12,3,48,1,32,29,45,40,2,21,44,31,7,26,27,47,17,9,23,15,28,20,33,35};sequenceList.add(theSeq);

	theSeq=new byte[]{6,23,47,16,12,35,7,13,42,37,44,9,38,28,2,5,14,41,34,17,25,30,4,36,3,32,33,43,10,15,40,31,48,26,46,27,20,1,18,45,8,39,21,29,24,22,11,19};sequenceList.add(theSeq);

	theSeq=new byte[]{19,12,43,33,21,36,35,9,27,3,2,4,7,23,41,13,30,14,20,31,22,34,24,11,8,45,39,29,44,46,25,6,47,26,10,28,17,32,5,16,15,38,1,48,42,18,40,37};sequenceList.add(theSeq);

	theSeq=new byte[]{26,7,4,11,1,23,19,28,33,30,9,45,13,15,2,43,14,36,34,46,12,17,48,41,5,21,27,31,40,47,42,38,39,37,10,20,22,6,3,8,32,16,18,29,35,24,44,25};sequenceList.add(theSeq);

	theSeq=new byte[]{1,35,37,8,3,26,9,10,47,34,39,38,5,48,4,42,24,18,44,23,11,43,32,30,25,12,40,28,19,31,46,15,36,33,2,45,41,6,14,7,13,21,17,27,29,20,22,16};sequenceList.add(theSeq);

	theSeq=new byte[]{10,18,25,23,9,7,48,2,12,22,33,19,24,45,31,41,4,28,11,32,27,8,16,3,17,20,29,44,39,26,47,37,35,34,15,42,46,5,40,21,30,43,6,13,1,38,36,14};sequenceList.add(theSeq);

	theSeq=new byte[]{47,17,11,2,46,6,42,22,21,36,39,26,35,29,24,32,34,7,48,3,43,13,44,30,19,16,27,4,31,18,37,20,28,40,15,5,45,12,38,41,9,1,25,33,8,14,23,10};sequenceList.add(theSeq);

	theSeq=new byte[]{2,25,19,26,28,17,40,22,11,32,35,33,9,23,29,39,45,20,46,37,3,41,7,1,15,43,6,27,31,8,13,30,4,12,48,47,14,38,24,34,21,44,36,10,5,18,42,16};sequenceList.add(theSeq);

	theSeq=new byte[]{8,26,37,30,11,6,16,19,4,18,9,43,25,12,40,46,39,22,44,21,23,27,47,10,3,14,41,5,35,15,1,2,32,28,17,13,36,33,42,24,48,20,45,7,38,34,31,29};sequenceList.add(theSeq);

	theSeq=new byte[]{40,5,33,10,32,14,3,11,45,27,39,30,18,46,7,16,21,12,37,15,25,35,17,9,38,36,31,29,13,6,4,28,34,8,41,48,44,23,20,2,47,19,24,1,43,22,26,42};sequenceList.add(theSeq);

	theSeq=new byte[]{33,13,15,24,12,11,25,9,44,28,35,19,48,26,17,41,3,45,29,18,20,2,47,32,31,30,14,37,38,43,22,16,27,6,39,5,7,8,4,1,40,42,34,21,23,10,46,36};sequenceList.add(theSeq);

	theSeq=new byte[]{10,21,4,44,45,9,13,46,3,11,8,14,26,48,28,37,34,16,18,31,6,27,33,17,43,24,19,12,29,32,7,30,35,41,42,25,38,15,40,20,22,5,39,47,23,1,2,36};sequenceList.add(theSeq);

	theSeq=new byte[]{43,26,42,16,9,12,19,37,6,18,38,3,10,2,24,27,17,32,4,36,47,8,30,44,29,40,31,15,13,7,45,33,41,5,22,48,39,21,11,20,34,28,46,25,23,1,14,35};sequenceList.add(theSeq);

	theSeq=new byte[]{30,41,19,10,35,27,31,9,2,45,39,23,46,28,16,25,5,42,12,26,7,20,48,13,18,14,32,22,29,24,40,4,43,8,21,38,11,44,37,47,1,34,36,3,15,6,33,17};sequenceList.add(theSeq);

	theSeq=new byte[]{24,44,23,11,17,40,3,33,26,7,27,9,18,42,16,45,21,39,8,41,1,47,22,12,30,28,48,20,10,32,35,4,29,43,31,15,25,14,36,5,6,19,2,38,34,37,46,13};sequenceList.add(theSeq);

	theSeq=new byte[]{16,22,28,6,31,43,13,39,37,15,14,7,27,12,20,41,8,47,35,30,24,36,45,5,48,2,17,25,42,44,11,34,4,10,19,46,40,9,18,3,29,38,21,23,26,33,1,32};sequenceList.add(theSeq);

	theSeq=new byte[]{19,28,4,36,31,41,13,30,40,12,48,21,17,47,9,43,46,37,32,3,11,25,26,18,42,6,34,35,2,39,29,14,10,45,38,33,15,8,22,1,16,27,7,20,23,44,24,5};sequenceList.add(theSeq);

	theSeq=new byte[]{4,13,40,19,15,28,1,5,22,30,3,36,41,14,45,42,24,10,6,34,20,31,33,29,43,46,32,37,17,12,38,35,9,48,25,26,23,27,7,18,16,8,47,11,39,2,21,44};sequenceList.add(theSeq);

	theSeq=new byte[]{5,34,21,31,19,32,47,13,15,42,8,17,18,45,24,30,41,12,20,9,25,43,6,29,38,14,40,11,28,35,3,33,26,4,27,16,7,1,46,2,22,10,36,37,48,44,39,23};sequenceList.add(theSeq);

	theSeq=new byte[]{26,25,44,18,16,45,7,36,15,28,29,27,2,17,5,42,24,33,1,38,11,22,4,41,23,34,32,20,19,31,37,39,46,30,3,13,9,40,6,48,8,47,21,35,14,12,43,10};sequenceList.add(theSeq);

	theSeq=new byte[]{44,35,17,4,40,26,14,5,34,7,15,11,20,39,10,48,41,6,3,32,23,38,31,47,46,45,16,1,21,24,29,27,9,2,13,28,12,43,37,33,19,30,22,8,36,42,18,25};sequenceList.add(theSeq);

	theSeq=new byte[]{31,3,46,4,5,6,21,40,47,16,26,18,35,20,48,15,12,34,29,7,19,43,24,38,25,14,45,30,9,10,37,32,13,2,41,1,36,11,42,39,8,28,22,17,23,27,33,44};sequenceList.add(theSeq);

	theSeq=new byte[]{30,16,15,42,1,11,25,41,48,43,2,20,39,37,5,6,7,27,33,35,28,40,32,4,26,47,21,36,12,9,19,46,45,44,13,34,31,24,8,10,18,23,38,22,14,3,17,29};sequenceList.add(theSeq);

	theSeq=new byte[]{17,36,10,2,22,43,11,25,29,27,24,47,16,21,31,44,19,1,42,13,20,8,34,45,28,33,18,4,26,46,35,30,41,23,39,12,32,37,7,14,38,3,48,9,5,40,15,6};sequenceList.add(theSeq);

	theSeq=new byte[]{2,46,28,34,32,47,1,13,26,11,33,20,37,48,10,24,19,15,7,8,43,30,17,12,6,39,45,5,35,31,38,44,4,3,9,42,25,14,22,16,27,23,29,36,40,41,18,21};sequenceList.add(theSeq);

	theSeq=new byte[]{29,36,1,21,46,33,17,43,20,14,22,12,4,6,15,24,23,2,25,27,44,48,8,32,16,28,39,3,41,40,18,5,34,42,19,30,7,45,31,37,38,47,35,9,13,10,26,11};sequenceList.add(theSeq);

	theSeq=new byte[]{16,12,7,25,24,45,38,2,9,47,10,39,34,21,28,31,14,30,29,40,23,43,36,19,48,35,15,46,17,11,41,6,27,18,5,42,33,13,26,44,32,37,22,3,4,1,20,8};sequenceList.add(theSeq);

	theSeq=new byte[]{41,19,45,14,13,25,4,42,21,11,24,31,30,17,20,29,32,7,18,16,37,5,34,15,35,39,26,10,3,43,38,8,27,22,1,44,36,28,47,6,46,33,2,23,9,48,40,12};sequenceList.add(theSeq);

	theSeq=new byte[]{35,36,4,16,37,7,21,5,43,32,1,42,25,26,23,20,6,3,40,24,12,44,17,47,33,22,31,19,11,45,28,46,9,2,27,15,29,34,38,30,10,18,41,8,48,14,39,13};sequenceList.add(theSeq);

	theSeq=new byte[]{30,26,42,20,12,22,40,38,9,45,2,19,24,4,8,5,47,15,21,33,18,41,27,23,11,28,31,13,39,14,35,36,32,48,7,46,6,1,29,10,44,3,25,37,34,17,16,43};sequenceList.add(theSeq);

	theSeq=new byte[]{19,10,22,6,46,18,2,9,42,25,39,32,11,30,47,4,16,35,14,28,21,33,24,31,27,43,44,41,37,15,38,45,29,23,13,1,3,17,40,48,34,20,12,26,8,7,36,5};sequenceList.add(theSeq);

	theSeq=new byte[]{17,12,1,13,25,34,43,39,7,16,36,5,41,20,46,22,42,15,27,23,10,33,6,48,2,11,30,38,35,8,32,21,45,18,26,31,24,3,29,28,19,40,47,14,44,9,37,4};sequenceList.add(theSeq);

	theSeq=new byte[]{22,47,23,15,40,26,6,39,10,36,34,7,38,4,43,48,29,21,16,28,24,42,20,14,41,19,32,33,35,46,17,8,30,1,25,31,12,44,37,45,11,9,27,13,3,5,2,18};sequenceList.add(theSeq);

	theSeq=new byte[]{19,12,35,24,42,5,7,26,37,16,10,39,31,30,48,38,1,27,17,41,9,14,13,8,28,20,23,2,21,43,36,47,25,32,11,45,22,40,44,15,3,6,18,46,29,4,34,33};sequenceList.add(theSeq);

	theSeq=new byte[]{16,38,37,25,3,1,4,8,29,6,19,40,35,14,33,32,34,23,11,22,12,17,27,41,28,7,15,30,42,18,10,2,21,44,48,13,39,24,9,20,45,43,31,36,47,5,26,46};sequenceList.add(theSeq);

	theSeq=new byte[]{39,48,4,2,12,1,8,24,41,21,19,5,36,13,43,22,45,9,14,34,38,32,6,35,17,25,33,44,31,29,18,30,28,42,46,23,3,15,40,20,7,37,11,47,16,26,27,10};sequenceList.add(theSeq);

	theSeq=new byte[]{33,1,5,32,9,7,34,16,41,20,42,23,15,36,24,22,21,37,46,6,25,27,18,39,2,28,3,38,31,4,44,11,40,8,14,17,45,10,29,19,43,35,12,48,13,26,47,30};sequenceList.add(theSeq);

	theSeq=new byte[]{47,28,37,14,10,19,16,29,46,11,31,17,6,4,36,45,35,12,26,8,39,13,27,7,9,34,48,15,33,20,21,32,43,40,24,30,2,42,22,1,5,18,23,3,44,41,25,38};sequenceList.add(theSeq);

	theSeq=new byte[]{3,29,19,45,14,26,43,5,4,27,31,11,37,10,40,30,25,1,9,48,28,13,22,44,21,47,23,6,34,33,24,39,42,12,15,46,18,16,7,32,35,41,20,38,8,17,2,36};sequenceList.add(theSeq);

	theSeq=new byte[]{9,5,23,40,25,35,27,4,2,34,8,10,1,41,22,44,6,26,20,16,36,37,14,42,17,39,24,21,11,31,15,18,33,3,46,45,7,30,32,29,43,38,48,19,28,47,13,12};sequenceList.add(theSeq);

	theSeq=new byte[]{4,30,43,7,10,22,14,20,44,38,31,1,26,9,37,45,39,42,2,35,46,15,17,33,18,25,28,41,13,21,8,12,34,19,48,47,3,11,27,6,5,16,23,32,36,29,24,40};sequenceList.add(theSeq);

	theSeq=new byte[]{22,26,16,36,6,29,5,11,9,44,34,47,14,23,41,15,10,18,27,39,7,24,48,1,12,4,21,45,3,30,40,38,17,2,19,20,43,33,42,25,46,32,8,37,13,35,31,28};sequenceList.add(theSeq);

	theSeq=new byte[]{46,2,19,22,5,16,13,17,11,18,36,44,14,41,20,26,7,35,1,6,31,30,39,25,4,23,32,45,33,24,21,38,27,47,48,28,12,10,29,8,43,9,15,34,40,3,42,37};sequenceList.add(theSeq);

	theSeq=new byte[]{28,7,11,41,29,21,35,18,6,45,26,17,38,39,25,13,2,36,22,48,9,33,32,16,15,37,31,20,8,14,40,42,23,30,44,43,34,47,1,12,19,24,3,46,4,5,10,27};sequenceList.add(theSeq);

	theSeq=new byte[]{33,48,13,10,7,35,9,37,15,5,43,20,19,21,11,45,2,44,40,23,3,25,27,46,22,6,30,28,12,34,36,32,17,31,18,14,8,39,41,29,47,4,24,42,38,1,16,26};sequenceList.add(theSeq);

	theSeq=new byte[]{1,36,21,33,20,4,13,45,25,32,8,6,7,30,9,5,10,46,44,38,31,29,40,28,24,17,34,41,27,18,35,42,11,16,15,3,22,39,19,47,14,12,2,23,26,43,37,48};sequenceList.add(theSeq);

	theSeq=new byte[]{3,31,26,20,9,17,28,27,11,21,6,46,12,43,8,18,1,29,2,33,16,19,37,32,44,22,41,36,10,30,23,42,48,4,40,45,35,15,25,38,47,39,7,24,14,5,34,13};sequenceList.add(theSeq);

	theSeq=new byte[]{12,23,24,44,8,7,3,30,16,45,13,29,26,19,5,38,4,21,34,2,27,28,48,15,43,31,18,33,41,40,20,35,36,42,9,11,17,25,37,14,32,47,10,6,22,1,39,46};sequenceList.add(theSeq);

	theSeq=new byte[]{14,30,31,38,23,41,45,34,37,17,25,27,10,48,18,3,5,12,26,43,1,9,35,39,13,2,40,20,32,6,33,7,4,36,42,24,46,8,22,15,44,28,11,16,47,19,29,21};sequenceList.add(theSeq);

	theSeq=new byte[]{18,16,13,48,31,40,15,43,22,11,23,47,19,14,20,6,45,7,12,39,3,37,28,10,21,29,17,9,42,26,1,24,27,30,34,4,2,5,25,46,36,41,33,44,35,8,32,38};sequenceList.add(theSeq);

	theSeq=new byte[]{4,22,2,47,37,45,8,48,19,7,1,18,20,36,39,26,33,41,29,11,25,21,27,3,30,38,46,34,9,35,16,12,14,5,6,44,10,43,42,31,13,15,28,23,32,40,17,24};sequenceList.add(theSeq);

	theSeq=new byte[]{24,15,9,8,13,6,25,10,18,40,42,17,23,22,2,3,20,1,19,39,37,32,16,12,7,28,43,44,14,4,36,26,48,45,34,21,30,46,41,27,31,47,33,38,35,29,5,11};sequenceList.add(theSeq);

	theSeq=new byte[]{4,42,7,16,30,35,37,2,12,24,44,18,5,13,31,32,19,14,38,45,9,10,48,26,47,28,17,36,6,23,46,1,40,15,39,43,27,20,41,21,22,29,33,34,11,8,3,25};sequenceList.add(theSeq);

	theSeq=new byte[]{31,9,45,40,14,27,42,10,44,47,23,16,38,48,1,15,35,8,18,25,17,12,22,30,19,39,4,46,41,43,34,36,32,21,26,6,2,29,11,13,24,5,37,3,20,28,33,7};sequenceList.add(theSeq);

	theSeq=new byte[]{6,4,32,41,5,42,15,23,22,11,17,10,13,16,19,34,46,1,24,2,20,33,27,39,12,30,35,37,38,31,36,44,25,45,29,43,40,47,21,14,9,7,8,26,3,18,28,48};sequenceList.add(theSeq);

	theSeq=new byte[]{25,48,5,8,10,9,34,1,20,43,26,47,21,7,37,18,36,45,23,17,24,42,27,16,31,33,14,12,4,30,40,32,15,35,22,44,2,6,38,39,28,29,46,11,41,13,19,3};sequenceList.add(theSeq);

	theSeq=new byte[]{8,6,10,41,21,29,17,25,27,24,36,19,32,46,9,5,18,33,40,39,38,20,4,12,43,42,34,16,48,30,3,44,13,45,11,35,7,15,2,14,23,1,31,28,37,26,22,47};sequenceList.add(theSeq);

	theSeq=new byte[]{33,21,7,42,44,23,39,35,32,15,24,13,8,17,20,45,47,34,4,30,28,2,37,12,36,22,5,40,10,43,48,3,46,9,25,38,41,11,26,18,16,14,6,29,1,31,19,27};sequenceList.add(theSeq);

	theSeq=new byte[]{40,5,27,16,10,2,19,15,46,9,28,48,17,4,1,39,11,42,23,8,33,3,12,29,45,7,34,30,20,37,41,44,6,13,47,21,14,24,18,22,36,35,26,31,32,43,38,25};sequenceList.add(theSeq);

	theSeq=new byte[]{12,4,47,13,28,6,3,9,20,35,8,14,2,48,18,15,1,30,11,16,26,41,21,5,38,10,40,27,42,7,37,33,23,19,31,25,29,34,24,36,45,43,46,39,17,44,22,32};sequenceList.add(theSeq);

	theSeq=new byte[]{19,20,29,41,12,35,15,5,32,7,48,16,38,46,27,13,24,9,23,22,43,21,3,14,1,31,36,45,2,37,30,11,25,33,26,18,40,34,42,28,6,44,10,47,17,39,8,4};sequenceList.add(theSeq);

	theSeq=new byte[]{28,9,2,11,8,32,38,13,4,48,10,27,21,12,19,23,17,30,7,31,1,3,33,29,26,22,24,36,46,44,18,47,45,25,16,39,14,5,6,40,37,43,34,42,41,20,15,35};sequenceList.add(theSeq);

	theSeq=new byte[]{43,31,45,26,41,24,6,10,35,42,13,46,21,9,47,7,34,16,37,36,17,38,23,28,19,3,14,22,25,33,2,18,5,48,32,4,1,44,39,29,11,15,12,30,27,8,20,40};sequenceList.add(theSeq);

	theSeq=new byte[]{7,32,40,3,39,8,42,43,17,41,14,29,34,16,22,9,18,1,21,31,44,35,13,12,27,6,5,25,24,36,4,10,30,2,19,20,38,47,26,23,33,45,37,46,15,48,11,28};sequenceList.add(theSeq);

	theSeq=new byte[]{18,4,37,25,22,30,43,47,24,34,42,26,12,1,33,21,8,13,16,48,36,19,9,23,10,31,14,39,3,44,32,5,45,29,28,15,7,27,41,46,6,38,40,17,2,35,20,11};sequenceList.add(theSeq);

	theSeq=new byte[]{44,23,11,4,27,5,43,14,18,46,12,40,3,34,24,30,31,8,39,22,28,37,9,32,15,2,10,21,25,45,17,6,1,47,33,13,41,16,35,42,29,38,19,48,26,7,36,20};sequenceList.add(theSeq);

	theSeq=new byte[]{39,47,19,25,32,30,34,16,3,5,6,26,37,15,21,8,43,44,40,31,42,27,13,12,2,4,1,36,7,10,45,18,17,11,28,48,46,35,14,41,20,9,22,24,23,33,29,38};sequenceList.add(theSeq);

	theSeq=new byte[]{10,3,34,43,11,40,20,13,7,44,21,36,1,26,31,35,38,41,15,14,2,37,22,27,23,17,8,16,28,47,5,45,4,12,39,6,48,30,32,9,25,18,46,19,29,42,33,24};sequenceList.add(theSeq);

	theSeq=new byte[]{32,19,21,47,14,10,28,4,12,11,33,6,35,25,22,41,42,18,26,24,30,36,48,27,40,23,43,45,46,8,9,15,7,3,2,1,20,13,44,5,17,16,38,37,34,29,39,31};sequenceList.add(theSeq);

	theSeq=new byte[]{37,13,33,14,17,26,16,24,47,45,46,3,48,34,40,1,25,28,6,38,19,5,35,27,18,9,42,39,23,15,10,36,22,32,8,44,11,4,41,31,21,30,7,29,20,2,43,12};sequenceList.add(theSeq);

	theSeq=new byte[]{39,27,7,41,28,36,18,20,21,19,25,8,23,37,3,14,6,48,15,13,45,42,35,31,10,30,17,47,22,26,29,33,34,46,12,9,1,2,44,16,43,32,5,11,4,24,38,40};sequenceList.add(theSeq);

	theSeq=new byte[]{44,3,21,39,41,6,5,42,22,17,19,34,30,1,14,32,36,31,27,9,23,28,29,4,15,43,13,16,37,40,2,33,25,47,26,24,12,48,18,45,20,11,38,35,10,8,46,7};sequenceList.add(theSeq);

	theSeq=new byte[]{38,2,17,1,39,42,13,31,6,22,12,20,5,29,8,47,44,3,25,10,37,16,24,46,9,32,18,34,41,36,4,7,35,43,23,28,14,11,48,27,33,45,15,19,40,30,26,21};sequenceList.add(theSeq);

	theSeq=new byte[]{12,47,37,14,21,40,8,9,7,36,10,28,41,16,19,30,31,2,35,48,39,15,27,13,5,26,4,32,3,23,24,33,17,11,44,20,43,46,22,1,42,6,45,29,38,34,18,25};sequenceList.add(theSeq);

	theSeq=new byte[]{24,5,36,32,18,47,8,15,12,29,19,38,40,9,7,33,41,31,28,30,42,22,2,39,10,16,21,20,43,45,3,6,4,14,23,35,25,46,11,13,48,1,34,26,17,44,37,27};sequenceList.add(theSeq);

	theSeq=new byte[]{4,35,38,29,48,6,17,32,27,12,18,31,3,5,46,42,23,36,26,19,34,40,11,9,2,30,44,10,41,8,15,28,14,47,25,21,33,43,22,39,20,24,45,13,16,37,1,7};sequenceList.add(theSeq);

	theSeq=new byte[]{15,24,29,30,45,20,14,41,37,23,27,4,16,44,34,10,12,22,46,48,7,6,35,43,5,40,42,33,47,13,1,32,8,36,31,19,17,9,38,2,21,25,39,18,26,11,3,28};sequenceList.add(theSeq);

	theSeq=new byte[]{3,1,37,39,40,17,19,24,10,14,13,16,41,11,44,36,31,29,20,30,6,4,38,42,5,12,35,33,22,34,46,2,27,18,47,48,43,15,25,26,23,45,9,8,32,28,7,21};sequenceList.add(theSeq);

	theSeq=new byte[]{4,34,31,45,25,28,30,38,39,3,17,8,1,32,11,46,21,48,10,24,47,40,12,27,19,37,5,20,33,29,36,26,42,9,2,13,23,16,15,41,44,43,14,7,22,6,18,35};sequenceList.add(theSeq);

	theSeq=new byte[]{4,21,10,45,23,47,8,27,17,12,26,24,3,18,37,20,33,14,35,36,48,13,44,22,46,25,40,19,39,31,7,28,42,38,16,30,6,5,32,1,9,11,41,43,29,15,34,2};sequenceList.add(theSeq);

	theSeq=new byte[]{15,28,18,22,17,40,47,1,6,14,46,5,7,3,23,20,48,16,12,19,29,13,24,8,30,27,31,9,43,32,38,2,10,44,11,34,41,36,25,42,35,21,4,39,26,45,37,33};sequenceList.add(theSeq);

	theSeq=new byte[]{4,38,23,1,20,19,14,9,46,13,15,17,18,32,33,39,31,21,36,42,3,24,37,25,43,35,28,2,41,48,45,10,22,8,12,5,44,30,11,16,27,40,26,47,7,29,34,6};sequenceList.add(theSeq);

	theSeq=new byte[]{47,23,28,29,1,12,7,39,38,4,16,14,43,25,45,17,13,11,3,35,20,24,31,19,48,26,44,36,2,9,8,27,46,18,42,33,5,41,22,32,15,30,10,21,6,34,40,37};sequenceList.add(theSeq);

	theSeq=new byte[]{8,26,27,2,12,18,41,15,20,30,46,1,5,25,21,19,43,24,32,36,23,42,6,33,11,35,44,34,31,14,45,48,10,17,40,39,29,47,7,9,37,13,38,22,28,3,16,4};sequenceList.add(theSeq);

	theSeq=new byte[]{5,6,4,40,7,26,15,23,12,17,13,42,44,39,21,48,22,8,28,33,46,29,24,10,20,2,31,16,19,32,36,38,35,34,25,3,11,37,41,47,30,18,45,27,1,14,9,43};sequenceList.add(theSeq);



	}

	public static String enc(String pesan) {

		byte[] md5str = Vutil.md5toByte(pesan + "Vv.ii.pp.ee.rr");
		String allmd5 = "";
		for (int i = 0; i < md5str.length; i++) {
			// System.out.println(String.valueOf(md5str[i]));
			String hex = Integer.toHexString(0xFFF & md5str[i]);
			for (int j = 0; j < 3 - hex.length(); j++) {
				hex = "0" + hex;
			}

			if (hex.length() == 2) {
				hex = "0" + hex;
			}

			allmd5 += hex;
			//System.out.println(hex);
			// System.out.println("panjangnya --> "+hex.length());
		}
		return allmd5;
	}

}
